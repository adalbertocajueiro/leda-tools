-Refazer o video sobre o site da disciplina e o sistema de submissão
 * comentar sobre as informações gerais da disciplina
 * falar sobre as opcoes do menu do site
 * falar o ID das aulas
 * tentar comentar sobre informações que nao dependam de data nem de semstre
 * dar uma descricao completa mostrando as planilhas de notas também e as faltas
OK

- Fazer video sobre as ferramentas de LEDA
 * como baixar os projetos e ordem de compilacao - OK
 * falar para que serve cada ferramenta: chart, sender, compactor, correction, submission-server - OK
 * falar sobre repositorio de artefatos (onde esta e como fazer o deploy para ele) - OK
 * falar do servidor de submissao e como colocar ele no ar
 * como criar um novo roteiro (sorting ou estrutura de dados) e mandar para o servidor
 * como criar uma nova prova e mandar para o servidor
 

formatadores de codigo

https://github.com/revelc/formatter-maven-plugin
http://code.revelc.net/formatter-maven-plugin/usage.html
http://code.revelc.net/formatter-maven-plugin/plugin-info.html
https://github.com/gavin-hu/javafmt-maven-plugin
http://stackoverflow.com/questions/1652012/organize-imports-with-maven2-eclipse-style

walkmod:
http://walkmod.com/getstarted
https://github.com/walkmod/maven-walkmod-plugin

exemplo de uso:
<plugin>
				<groupId>org.walkmod</groupId>
				<artifactId>maven-walkmod-plugin</artifactId>
				<version>1.3</version>
				<configuration>
					<transformation type="imports-cleaner" />
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>apply</goal>
						</goals>
						<configuration>
							<skipWalkmod>false</skipWalkmod>
						</configuration>
					</execution>
				</executions>
			</plugin>

Fazer um plugin maven que deixa os arquivos java da pasta src read only (recursivamente) exceto os que forem 
informados na configuracao. Usar esse plugin nos projetos dos roteiros e provas. apenas os que os alunos puderem
modificar poderao ser sobrescritos.
File file = new File("c:/file.txt");

    	//mark this file as read only, since jdk 1.2
    	file.setReadOnly();

    	if(file.canWrite()){
    	     System.out.println("This file is writable");
    	}else{
    	     System.out.println("This file is read only");
    	}

    	//revert the operation, mark this file as writable, since jdk 1.6
    	file.setWritable(true);

    	if(file.canWrite()){
    	     System.out.println("This file is writable");
    	}else{
    	     System.out.println("This file is read only");
    	}
